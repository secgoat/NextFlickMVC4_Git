@using PagedList
@using NextFlicksMVC4

@model PagedList.IPagedList<NextFlicksMVC4.Views.Movies.ViewModels.FullViewModel>                                                            
@{
    ViewBag.Title = "Results";
}


<div class="nit_list">
@foreach (var item in Model)
{
        @Html.Partial("_Title", item)
}
</div>

<div class="pagination_container">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount

    @if (Model.HasPreviousPage)
    { 
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, source = ViewBag.SearchType })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currenFilter = ViewBag.CurrentFilter, source = ViewBag.SearchType })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev 
    }

    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, source = ViewBag.SearchType })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, source = ViewBag.SearchType })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>
