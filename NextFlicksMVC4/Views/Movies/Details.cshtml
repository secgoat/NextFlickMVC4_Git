@model NextFlicksMVC4.Views.Movies.ViewModels.FullViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = Model.Movie.short_title;
}
<div class="details_page">
    <div class="details_images drop-shadow perspective">
        <div class="details_boxart  ">
            <a class="details_webpage" href=@Html.DisplayFor(model => model.Movie.web_page) >
                <img src=@Html.DisplayFor(model => model.Boxarts.boxart_284) />
            </a>
        </div>
    </div>  
    <div class="details_content">
        <div class="details_header">
            <span class="details_title">@Html.DisplayFor(model => model.Movie.short_title)</span>
            <span class="details_year">(@Html.DisplayFor(model => model.Movie.year))</span>
        </div>
        
        <div class="details_ratings">
            <div class="details_rotten">
                <span class="details_rotten_meter">Meter: @Html.DisplayFor(model => model.OmdbEntry.t_Meter)</span>
                <span class="details_rotten_fresh">Fresh: @Html.DisplayFor(model => model.OmdbEntry.t_Fresh)</span>
                <span class="details_rotten_rotten">Rotten: @Html.DisplayFor(model => model.OmdbEntry.t_Rotten)</span>
            </div>
            <div class="details_imdb">
                <span class="details_imdb_rating"> IMDB Rating: @Html.DisplayFor(model => model.OmdbEntry.i_Rating)</span>
            </div>
        </div>
        
        <div class="details_links">
            <span class="details_links_netflix">
                <a href="@Html.DisplayFor(model => model.Movie.web_page)">Netflix page</a>
            </span>
            @if (Model.OmdbEntry != null) {
                <span class="details_links_imdb">
                    <a href="@Html.DisplayFor(model => model.OmdbEntry.i_ID)">IMDB page</a>
                </span>
            }
        </div>
        
        <div class="details_summary">
            <p class="details_summary_text">@Html.DisplayFor(model=>model.Plot)</p>
        </div>
        
        <div class="details_genres_container">
            <div class="details_genres">@Html.DisplayFor(model => model.Genres)</div>
        </div>
        
        @* this would be lovely but does not work
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Tags.TagAndCount)
        </div>
        *@
        <div class="display-field">
            @foreach (KeyValuePair<string, int> kvp in Model.Tags.TagAndCount)
            {
                <a href="~/Tag/Details?tagName=@kvp.Key" class="tag" title="Tagged @kvp.Value.ToString() times. Click for more info."> @kvp.Key </a>
            }
        </div>
        <div class="display-field" style="clear: both">
            @if (Roles.IsUserInRole("User") || Roles.IsUserInRole("Admin"))
            {
                using (Html.BeginForm())
                { 
                    <fieldset>
                    <h6>Seperate tags by comma</h6>
                    <p>
                    @Html.TextBox("tags", value: "") @Html.CheckBox("anon")Anonymous? 
                    </p>
                    <p><input type="submit" value="Add Tags" /></p>
                    </fieldset>
                }
            }
            
        </div>
    </div>
</div>

@* ----------------------------------------------------------------------------
Below here was the original deatails, I replaced it with details2 so we dont 
have so many damn views kicking around confusing my alzheimers ass
-------------------------------------------------------------------------------

@model NextFlicksMVC4.Views.Movies.ViewModels.FullViewModel

@{
    ViewBag.Title = "Complete Details";
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    <fieldset>
        using reflection to loop over properties. Is hard code

        @foreach (var property in ViewData.ModelMetadata.Properties)
        {

            <div class="editor-line">
                <div class="display-label">@(property.DisplayName ?? property.PropertyName)</div>
                <div class="display-field">@Html.Display(property.PropertyName)</div>
            </div>
        }
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Tags.TagAndCount)
        </div>
        <div class="display-field">
            @foreach (KeyValuePair<string, int> kvp in Model.Tags.TagAndCount)
            {
                <a href="~/Tag/Details?tagName=@kvp.Key" class="tag" title="Tagged @kvp.Value.ToString() times. Click for more info."> @kvp.Key </a>
            }
        </div>
        <div class="display-field" style="clear: both">
            @if(WebSecurity.IsAuthenticated)
            {
                <h6>Seperate tags by comma</h6>
                <p>
                    @Html.TextBox("tags", value: "") @Html.CheckBox("anon", false)Anonymous?
                </p>
                <p><input type="submit" value="Add Tags" /></p>
            }
            
        </div>
    </fieldset>
}
<p>
    @Html.ActionLink("Edit", "Edit", new { id=Model.movie_ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
*@